name: Build and Upload Components

on:
  workflow_call:
    inputs:
      image_tag:
        required: true
        type: string
        description: 'Image tag to use.'
      registry_name:
        required: false
        type: string
        description: 'Name of the registry.'
        default: openclarity.io
      bake-group:
        required: false
        type: string
        description: 'Name of the Docker Bake group of targets'
        default: default

jobs:
  prepare-build:
    runs-on: ubuntu-latest
    outputs:
      timestamp: ${{ steps.timestamp.outputs.timestamp }}
      targets: ${{ steps.targets.outputs.targets }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set timestamp
        id: timestamp
        run: |
          ##
          ## Set timestamp variable
          ##

          echo "timestamp=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> "$GITHUB_OUTPUT"

      - name: List targets
        id: targets
        uses: docker/bake-action/subaction/list-targets@4a9a8d494466d37134e2bfca2d3a8de8fb2681ad # v5.13.0
        with:
          target: ${{ inputs.bake-group }}

  build-and-upload:
    needs: prepare-build
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILD_RECORD_UPLOAD: false
    strategy:
      fail-fast: false
      matrix:
        targets: ${{ fromJson(needs.prepare-build.outputs.targets) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Cache Docker layers
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.ref }}
          restore-keys: ${{ runner.os }}-buildx-

      - name: Create cache directory
        run: mkdir -p /tmp/.buildx-cache

      - name: Build
        uses: docker/bake-action@4a9a8d494466d37134e2bfca2d3a8de8fb2681ad # v5.13.0
        id: bake
        with:
          targets: ${{ matrix.targets }}
          set: |
            *.platform=linux/amd64
            *.output=type=docker,dest=/tmp/${{ matrix.targets }}.tar
            *.cache-to=type=local,dest=/tmp/.buildx-cache
            *.cache-from=type=local,src=/tmp/.buildx-cache
        env:
          VERSION: ${{ inputs.image_tag }}
          BUILD_TIMESTAMP: ${{ needs.prepare-build.outputs.timestamp }}
          COMMIT_HASH: ${{ github.sha }}
          DOCKER_REGISTRY: ${{ inputs.registry_name }}
          DOCKER_TAG: ${{ inputs.image_tag }}
          BUILD_OPTS: -tags=exclude_graphdriver_btrfs,exclude_graphdriver_devicemapper

      - name: Save artifact
        run: |
          mkdir -p /tmp/artifacts
          mv "/tmp/${{ matrix.targets }}.tar" /tmp/artifacts/
          ARTIFACT_NAME="$(echo ${{ matrix.targets }}-${{ inputs.image_tag }} | tr '/' '-')"
          echo ARTIFACT_NAME="$ARTIFACT_NAME" >> "$GITHUB_ENV"

      - name: Upload artifact
        id: upload-artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: /tmp/artifacts/${{ matrix.targets }}.tar
          if-no-files-found: error
          retention-days: 1
          compression-level: 0
          overwrite: true
